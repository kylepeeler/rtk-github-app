{"version":3,"sources":["api/githubAPI.tsx","features/issuesDisplay/issuesDisplaySlice.ts","features/issuesList/issuesSlice.ts","components/UserWithAvatar.module.css","features/issueDetails/IssueComments.module.css","features/issueDetails/IssueDetailsPage.module.css","features/repoSearch/RepoSearchForm.tsx","features/issuesList/IssuesPageHeader.tsx","utils/stringUtils.ts","components/IssueLabels.tsx","components/UserWithAvatar.tsx","features/issuesList/IssueListItem.tsx","features/issuesList/IssuesList.tsx","features/issuesList/IssuePagination.tsx","features/issuesList/IssuesListPage.tsx","features/issueDetails/IssueMeta.tsx","features/issueDetails/IssueComments.tsx","features/issueDetails/IssueDetailsPage.tsx","app/App.tsx","app/rootReducer.ts","app/store.ts","index.tsx","features/issuesList/IssueListItem.module.css","features/issueDetails/IssueMeta.module.css","features/repoSearch/repoDetailsSlice.ts","features/issueDetails/commentsSlice.ts","features/issuesList/IssuesList.module.css","features/issuesList/IssuePagination.module.css"],"names":["getConfig","headers","process","REACT_APP_GH_API_TOKEN","getPageCount","pageLinks","Object","keys","length","first","prev","isLastPage","parseInt","page","last","getIssues","org","repo","a","url","axios","get","issuesResponse","pageCount","parseLink","link","issues","data","getRepoDetails","getIssue","number","getComments","issuesDisplaySlice","createSlice","name","initialState","displayType","issueId","reducers","displayRepo","state","action","payload","setCurrentPage","setCurrentDisplayType","actions","startLoading","isLoading","loadingFailed","error","issuesByNumber","currentPageIssues","getIssueStart","getIssuesStart","getIssueSuccess","getIssuesSuccess","forEach","issue","map","getIssueFailure","getIssuesFailure","fetchIssues","dispatch","toString","fetchIssue","module","exports","RepoSearchForm","setOrgAndRepo","setJumpToPage","useState","currentOrg","setCurrentOrg","currentRepo","setCurrentRepo","currentPageText","setCurrentPageText","className","htmlFor","style","marginRight","value","onChange","e","target","marginLeft","type","onClick","marginTop","newPage","OrgRepo","href","IssuesPageHeader","openIssuesCount","pluralizedIssue","insertMentionLinks","markdown","replace","IssueLabels","labels","classnames","label","key","id","boxShadow","color","borderColor","UserWithAvatar","user","orientation","classes","linkClassnames","styles","issueUser","vertical","horizontal","avatarClassnames","avatar","usernameClassnames","username","contents","Fragment","src","avatar_url","alt","login","IssueListItem","title","comments","body","showIssueComments","pluralizedComments","preventDefault","stopPropagation","text","maxLength","cleanText","ellip","oneTooLarge","substr","test","i","shorten","IssuesList","renderedIssues","issuesList","IssuePagination","currentPage","onPageChange","pagination","forcePage","marginPagesDisplayed","pageRangeDisplayed","nextLabel","previousLabel","IssuesListPage","useDispatch","useSelector","repoDetails","issuesError","issueNumber","useEffect","fetchIssuesCount","Math","min","max","renderedList","selectedItem","selected","IssueState","issueState","open","IssueNumber","IssueMeta","meta","IssueComment","comment","source","IssueComments","commentsList","IssueDetailsPage","content","showIssuesList","commentsLoading","loading","commentsError","commentsByIssue","shallowEqual","window","scrollTo","top","fetchComments","renderedComments","backToIssueListButton","issueDetailsPage","issueLabels","divider","summary","App","issuesDisplay","rootReducer","combineReducers","issuesDisplayReducer","issuesReducer","commentsReducer","repoDetailsReducer","store","configureStore","reducer","require","default","ReactDOM","render","document","getElementById","getRepoDetailsSuccess","open_issues_count","getRepoDetailsFailed","getCommentsStart","getCommentsSuccess","getCommentsFailure","comments_url"],"mappings":"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","file":"static/js/main.07e45c72.chunk.js","sourcesContent":["import axios from 'axios';\nimport parseLink, { Links } from 'parse-link-header';\n\nexport interface Label {\n  id: number;\n  name: string;\n  color: string;\n}\n\nexport interface User {\n  login: string;\n  avatar_url: string;\n}\n\nexport interface Issue {\n  id: number;\n  title: string;\n  number: number;\n  user: User;\n  body: string;\n  labels: Label[];\n  comments_url: string;\n  state: 'open' | 'closed';\n  comments: number;\n}\n\nexport interface RepoDetails {\n  id: number;\n  name: string;\n  full_name: string;\n  open_issues_count: number;\n}\n\nexport interface Comment {\n  id: number;\n  body: string;\n  user: User;\n  created_at: string;\n  updated_at: string;\n}\n\nexport interface IssuesResult {\n  pageLinks: Links | null;\n  pageCount: number;\n  issues: Issue[];\n}\n\nconst getConfig = () => {\n  return {\n    headers: {\n      'Authorization': `token ${process.env.REACT_APP_GH_API_TOKEN}`,\n    },\n  };\n};\n\nconst isLastPage = (pageLinks: Links) => {\n  return (\n    Object.keys(pageLinks).length === 2 && pageLinks.first && pageLinks.prev\n  );\n};\n\nconst getPageCount = (pageLinks: Links) => {\n  if (!pageLinks) {\n    return 0;\n  }\n  if (isLastPage(pageLinks)) {\n    return parseInt(pageLinks.prev.page, 10) + 1;\n  } else if (pageLinks.last) {\n    return parseInt(pageLinks.last.page, 10);\n  } else {\n    return 0;\n  }\n};\n\nexport async function getIssues(\n  org: string,\n  repo: string,\n  page = 1\n): Promise<IssuesResult> {\n  const url = `https://api.github.com/repos/${org}/${repo}/issues?per_page=25&page=${page}`;\n\n  try {\n    const issuesResponse = await axios.get<Issue[]>(url, getConfig());\n    let pageCount = 0;\n    const pageLinks = parseLink(issuesResponse.headers.link);\n\n    if (pageLinks !== null) {\n      pageCount = getPageCount(pageLinks);\n    }\n\n    return {\n      pageLinks,\n      pageCount,\n      issues: issuesResponse.data,\n    };\n  } catch (err) {\n    throw err;\n  }\n}\n\nexport async function getRepoDetails(org: string, repo: string) {\n  const url = `https://api.github.com/repos/${org}/${repo}`;\n\n  const { data } = await axios.get<RepoDetails>(url, getConfig());\n  return data;\n}\n\nexport async function getIssue(org: string, repo: string, number: number) {\n  const url = `https://api.github.com/repos/${org}/${repo}/issues/${number}`;\n\n  const { data } = await axios.get<Issue>(url, getConfig());\n  return data;\n}\n\nexport async function getComments(url: string) {\n  const { data } = await axios.get<Comment[]>(url, getConfig());\n  return data;\n}\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\ninterface CurrentDisplay {\n  displayType: 'issues' | 'comments';\n  issueId: number | null;\n}\n\ninterface CurrentDisplayPayload {\n  displayType: 'issues' | 'comments';\n  issueId?: number;\n}\n\ninterface CurrentRepo {\n  org: string;\n  repo: string;\n}\n\ntype CurrentDisplayState = {\n  page: number;\n} & CurrentDisplay &\n  CurrentRepo;\n\nlet initialState: CurrentDisplayState = {\n  org: 'rails',\n  repo: 'rails',\n  page: 1,\n  displayType: 'issues',\n  issueId: null,\n};\n\nconst issuesDisplaySlice = createSlice({\n  name: 'issuesDisplay',\n  initialState,\n  reducers: {\n    displayRepo(state, action: PayloadAction<CurrentRepo>) {\n      const { org, repo } = action.payload;\n      state.org = org;\n      state.repo = repo;\n    },\n    setCurrentPage(state, action: PayloadAction<number>) {\n      state.page = action.payload;\n    },\n    setCurrentDisplayType(state, action: PayloadAction<CurrentDisplayPayload>) {\n      const { displayType, issueId = null } = action.payload;\n      state.displayType = displayType;\n      state.issueId = issueId;\n    },\n  },\n});\n\nexport const {\n  displayRepo,\n  setCurrentPage,\n  setCurrentDisplayType,\n} = issuesDisplaySlice.actions;\n\nexport default issuesDisplaySlice.reducer;\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { Links } from 'parse-link-header';\n\nimport { Issue, IssuesResult, getIssue, getIssues } from 'api/githubAPI';\nimport { AppThunk } from 'app/store';\n\ninterface IssuesState {\n  issuesByNumber: Record<number, Issue>;\n  currentPageIssues: number[];\n  pageCount: number;\n  pageLinks: Links | null;\n  isLoading: boolean;\n  error: string | null;\n}\n\nconst issuesInitialState: IssuesState = {\n  issuesByNumber: {},\n  currentPageIssues: [],\n  pageCount: 0,\n  pageLinks: null,\n  isLoading: false,\n  error: null,\n};\n\nfunction startLoading(state: IssuesState) {\n  state.isLoading = true;\n}\n\nfunction loadingFailed(state: IssuesState, action: PayloadAction<string>) {\n  state.isLoading = false;\n  state.error = action.payload;\n}\n\nconst issues = createSlice({\n  name: 'issues',\n  initialState: issuesInitialState,\n  reducers: {\n    getIssueStart: startLoading,\n    getIssuesStart: startLoading,\n    getIssueSuccess(state, { payload }: PayloadAction<Issue>) {\n      const { number } = payload;\n      state.issuesByNumber[number] = payload;\n      state.isLoading = false;\n      state.error = null;\n    },\n    getIssuesSuccess(state, { payload }: PayloadAction<IssuesResult>) {\n      const { pageCount, issues, pageLinks } = payload;\n      state.pageCount = pageCount;\n      state.pageLinks = pageLinks;\n      state.isLoading = false;\n      state.error = null;\n\n      issues.forEach((issue) => {\n        state.issuesByNumber[issue.number] = issue;\n      });\n\n      state.currentPageIssues = issues.map((issue) => issue.number);\n    },\n    getIssueFailure: loadingFailed,\n    getIssuesFailure: loadingFailed,\n  },\n});\n\nexport const {\n  getIssueStart,\n  getIssuesStart,\n  getIssueSuccess,\n  getIssuesSuccess,\n  getIssueFailure,\n  getIssuesFailure,\n} = issues.actions;\n\nexport default issues.reducer;\n\n// ---- Thunks ----\n\nexport const fetchIssues = (\n  org: string,\n  repo: string,\n  page?: number\n): AppThunk => async (dispatch) => {\n  try {\n    dispatch(getIssuesStart());\n    const issues = await getIssues(org, repo, page);\n    dispatch(getIssuesSuccess(issues));\n  } catch (err) {\n    dispatch(getIssuesFailure(err.toString()));\n  }\n};\n\nexport const fetchIssue = (\n  org: string,\n  repo: string,\n  number: number\n): AppThunk => async (dispatch) => {\n  try {\n    dispatch(getIssueStart());\n    const issue = await getIssue(org, repo, number);\n    dispatch(getIssueSuccess(issue));\n  } catch (err) {\n    dispatch(getIssueFailure(err.toString()));\n  }\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"issueUser\":\"UserWithAvatar_issueUser__1rZ56\",\"avatar\":\"UserWithAvatar_avatar__2b4Ue\",\"username\":\"UserWithAvatar_username__DZB8Q\",\"vertical\":\"UserWithAvatar_vertical__3VEes\",\"horizontal\":\"UserWithAvatar_horizontal__3DPD3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comment\":\"IssueComments_comment__2K-P3\",\"body\":\"IssueComments_body__26Hu9\",\"avatar\":\"IssueComments_avatar__1IClw\",\"username\":\"IssueComments_username__3CX3Q\",\"commentsList\":\"IssueComments_commentsList__1rPMM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"issueDetailsPage\":\"IssueDetailsPage_issueDetailsPage__2L9pw\",\"issueLabels\":\"IssueDetailsPage_issueLabels__2xoOq\",\"summary\":\"IssueDetailsPage_summary__3WqKZ\",\"divider\":\"IssueDetailsPage_divider__2tP7Z\"};","import React, { useState, ChangeEvent } from 'react'\n\nimport './pure-forms.css'\nimport './pure-buttons.css'\n\ninterface Props {\n  org: string\n  repo: string\n  setOrgAndRepo: (org: string, repo: string) => void\n  setJumpToPage: (page: number) => void\n}\n\ntype InputEvent = ChangeEvent<HTMLInputElement>\ntype ChangeHandler = (e: InputEvent) => void\n\nexport const RepoSearchForm = ({\n  org,\n  repo,\n  setOrgAndRepo,\n  setJumpToPage\n}: Props) => {\n  const [currentOrg, setCurrentOrg] = useState(org)\n  const [currentRepo, setCurrentRepo] = useState(repo)\n  const [currentPageText, setCurrentPageText] = useState('1')\n\n  const onOrgChanged: ChangeHandler = e => {\n    setCurrentOrg(e.target.value)\n  }\n\n  const onRepoChanged: ChangeHandler = e => {\n    setCurrentRepo(e.target.value)\n  }\n\n  const onCurrentPageChanged: ChangeHandler = e => {\n    setCurrentPageText(e.target.value)\n  }\n\n  const onLoadRepoClicked = () => {\n    setOrgAndRepo(currentOrg, currentRepo)\n  }\n\n  const onJumpToPageClicked = () => {\n    const newPage = parseInt(currentPageText)\n\n    if (newPage >= 1) {\n      setJumpToPage(newPage)\n    }\n  }\n\n  return (\n    <form className=\"pure-form\">\n      <div>\n        <label htmlFor=\"org\" style={{ marginRight: 5 }}>\n          Org:\n        </label>\n        <input name=\"org\" value={currentOrg} onChange={onOrgChanged} />\n        <label htmlFor=\"repo\" style={{ marginRight: 5, marginLeft: 10 }}>\n          Repo:\n        </label>\n        <input name=\"repo\" value={currentRepo} onChange={onRepoChanged} />\n        <button\n          type=\"button\"\n          className=\"pure-button pure-button-primary\"\n          style={{ marginLeft: 5 }}\n          onClick={onLoadRepoClicked}\n        >\n          Load Repo\n        </button>\n      </div>\n      <div style={{ marginTop: 5 }}>\n        <label htmlFor=\"jumpToPage\" style={{ marginRight: 5 }}>\n          Issues Page:\n        </label>\n        <input\n          name=\"jumpToPage\"\n          value={currentPageText}\n          onChange={onCurrentPageChanged}\n        />\n        <button\n          type=\"button\"\n          className=\"pure-button pure-button-primary\"\n          style={{ marginLeft: 5 }}\n          onClick={onJumpToPageClicked}\n        >\n          Jump to Page\n        </button>\n      </div>\n    </form>\n  )\n}\n","import React from 'react'\n\ninterface OrgProps {\n  org: string\n  repo: string\n}\n\ntype HeaderProps = {\n  openIssuesCount: number\n} & OrgProps\n\nfunction OrgRepo({ org, repo }: OrgProps) {\n  return (\n    <span>\n      <a href={`https://github.com/${org}`} className=\"header__org\">\n        {org}\n      </a>\n      {' / '}\n      <a href={`https://github.com/${org}/${repo}`} className=\"header__repo\">\n        {repo}\n      </a>\n    </span>\n  )\n}\n\nexport function IssuesPageHeader({\n  openIssuesCount = -1,\n  org,\n  repo\n}: HeaderProps) {\n  if (openIssuesCount === -1) {\n    return (\n      <h1>\n        Open issues for <OrgRepo org={org} repo={repo} />\n      </h1>\n    )\n  } else {\n    const pluralizedIssue = openIssuesCount === 1 ? 'issue' : 'issues'\n    return (\n      <h1>\n        <span className=\"header__openIssues\">{openIssuesCount}</span> open{' '}\n        {pluralizedIssue} for <OrgRepo org={org} repo={repo} />\n      </h1>\n    )\n  }\n}\n","export function insertMentionLinks(markdown: string) {\n  return markdown.replace(\n    /\\B(@([a-zA-Z0-9](-?[a-zA-Z0-9_])+))/g,\n    `**[$1](https://github.com/$2)**`\n  )\n}\n\nexport function shorten(text = '', maxLength = 140) {\n  // Normalize newlines\n  let cleanText = text.replace(/\\\\r\\\\n/g, '\\n')\n\n  // Return if short enough already\n  if (cleanText.length <= maxLength) {\n    return cleanText\n  }\n\n  const ellip = ' ...'\n\n  // Return the 140 chars as-is if they end in a non-word char\n  const oneTooLarge = cleanText.substr(0, 141)\n  if (/\\W$/.test(oneTooLarge)) {\n    return oneTooLarge.substr(0, 140) + ellip\n  }\n\n  // Walk backwards to the nearest non-word character\n  let i = oneTooLarge.length\n  while (--i) {\n    if (/\\W/.test(oneTooLarge[i])) {\n      return oneTooLarge.substr(0, i) + ellip\n    }\n  }\n\n  return oneTooLarge.substr(0, 140) + ellip\n}\n","import React from 'react'\nimport classnames from 'classnames'\n\nimport { Label } from 'api/githubAPI'\n\ninterface IssueLabelsProps {\n  labels: Label[]\n  className?: string\n}\n\nexport const IssueLabels = ({ labels, className }: IssueLabelsProps) => (\n  <div className={classnames('issue__labels', className)}>\n    {labels.map(label => (\n      <span\n        key={label.id}\n        className=\"issue__label\"\n        style={{\n          boxShadow: `0 0 2px #${label.color}`,\n          borderColor: `#${label.color}`\n        }}\n      >\n        {label.name}\n      </span>\n    ))}\n  </div>\n)\n","import React from 'react'\nimport classnames from 'classnames'\n\nimport { User } from 'api/githubAPI'\nimport styles from './UserWithAvatar.module.css'\n\ninterface UserAvatarProps {\n  user: User\n  orientation?: 'vertical' | 'horizontal'\n  link?: boolean\n  classes?: { [key: string]: string }\n}\n\nexport const UserWithAvatar = ({\n  user,\n  orientation = 'vertical',\n  link = true,\n  classes = {}\n}: UserAvatarProps) => {\n  const linkClassnames = classnames(styles.issueUser, {\n    [styles.vertical]: orientation === 'vertical',\n    [styles.horizontal]: orientation === 'horizontal'\n  })\n\n  const avatarClassnames = classnames(styles.avatar, classes.avatar)\n  const usernameClassnames = classnames(styles.username, classes.username)\n\n  const contents = (\n    <React.Fragment>\n      <img className={avatarClassnames} src={user.avatar_url} alt=\"\" />\n      <div className={usernameClassnames}>{user.login}</div>\n    </React.Fragment>\n  )\n\n  if (link) {\n    return (\n      <a href={`https://github.com/${user.login}`} className={linkClassnames}>\n        {contents}\n      </a>\n    )\n  } else {\n    return <span className={linkClassnames}>{contents}</span>\n  }\n}\n","import React, { MouseEvent } from 'react'\n\nimport { Issue } from 'api/githubAPI'\nimport { shorten } from 'utils/stringUtils'\n\nimport { IssueLabels } from 'components/IssueLabels'\nimport { UserWithAvatar } from 'components/UserWithAvatar'\n\nimport styles from './IssueListItem.module.css'\n\ntype Props = Issue & {\n  showIssueComments: (issueId: number) => void\n}\n\nexport const IssueListItem = ({\n  number,\n  title,\n  labels,\n  user,\n  comments,\n  body = '',\n  showIssueComments\n}: Props) => {\n  const onIssueClicked = (e: MouseEvent) => {\n    e.preventDefault()\n    e.stopPropagation()\n    showIssueComments(number)\n  }\n\n  const pluralizedComments = comments === 1 ? 'comment' : 'comments'\n\n  return (\n    <div className={styles.issue}>\n      <UserWithAvatar user={user} />\n      <div className=\"issue__body\">\n        <a href=\"#comments\" onClick={onIssueClicked}>\n          <span className={styles.number}>#{number}</span>\n          <span className={styles.title}>{title}</span>\n        </a>\n        <br /> ({comments} {pluralizedComments})\n        <p className=\"issue__summary\">{shorten(body)}</p>\n        <IssueLabels labels={labels} className={styles.label} />\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\n\nimport { Issue } from 'api/githubAPI'\nimport { IssueListItem } from './IssueListItem'\n\nimport styles from './IssuesList.module.css'\n\ninterface Props {\n  issues: Issue[]\n  showIssueComments: (issueId: number) => void\n}\n\nexport const IssuesList = ({ issues, showIssueComments }: Props) => {\n  const renderedIssues = issues.map(issue => (\n    <li key={issue.id}>\n      <IssueListItem {...issue} showIssueComments={showIssueComments} />\n    </li>\n  ))\n\n  return <ul className={styles.issuesList}>{renderedIssues}</ul>\n}\n","import React from 'react'\nimport classnames from 'classnames'\nimport Paginate, { ReactPaginateProps } from 'react-paginate'\n\nimport styles from './IssuePagination.module.css'\nimport './IssuePagination.css'\n\nexport type OnPageChangeCallback = ReactPaginateProps['onPageChange']\n\ninterface Props {\n  currentPage: number\n  pageCount: number\n  onPageChange?: OnPageChangeCallback\n}\n\nexport const IssuePagination = ({\n  currentPage,\n  pageCount,\n  onPageChange\n}: Props) => {\n  return (\n    <div className={classnames('issuesPagination', styles.pagination)}>\n      <Paginate\n        forcePage={currentPage}\n        pageCount={pageCount}\n        marginPagesDisplayed={2}\n        pageRangeDisplayed={5}\n        onPageChange={onPageChange}\n        nextLabel=\"&rarr;\"\n        previousLabel=\"&larr;\"\n      />\n    </div>\n  )\n}\n","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { fetchIssuesCount } from 'features/repoSearch/repoDetailsSlice';\nimport { RootState } from 'app/rootReducer';\n\nimport { IssuesPageHeader } from './IssuesPageHeader';\nimport { IssuesList } from './IssuesList';\nimport { IssuePagination, OnPageChangeCallback } from './IssuePagination';\nimport { fetchIssues } from './issuesSlice';\n\ninterface ILProps {\n  org: string;\n  repo: string;\n  page: number;\n  setJumpToPage: (page: number) => void;\n  showIssueComments: (issueId: number) => void;\n}\n\nexport const IssuesListPage = ({\n  org,\n  repo,\n  page = 1,\n  setJumpToPage,\n  showIssueComments,\n}: ILProps) => {\n  const dispatch = useDispatch();\n  const openIssuesCount = useSelector(\n    (state: RootState) => state.repoDetails.openIssuesCount\n  );\n\n  const {\n    currentPageIssues,\n    isLoading,\n    error: issuesError,\n    issuesByNumber,\n    pageCount,\n  } = useSelector((state: RootState) => state.issues);\n\n  const issues = currentPageIssues.map(\n    (issueNumber) => issuesByNumber[issueNumber]\n  );\n\n  useEffect(() => {\n    dispatch(fetchIssues(org, repo, page));\n    dispatch(fetchIssuesCount(org, repo));\n  }, [org, repo, page, dispatch]);\n\n  if (issuesError) {\n    return (\n      <div>\n        <h1>Something went wrong...</h1>\n        <div>{issuesError.toString()}</div>\n      </div>\n    );\n  }\n\n  const currentPage = Math.min(pageCount, Math.max(page, 1)) - 1;\n\n  let renderedList = isLoading ? (\n    <h3>Loading...</h3>\n  ) : (\n    <IssuesList issues={issues} showIssueComments={showIssueComments} />\n  );\n\n  const onPageChanged: OnPageChangeCallback = (selectedItem) => {\n    const newPage = selectedItem.selected + 1;\n    setJumpToPage(newPage);\n  };\n\n  return (\n    <div id=\"issue-list-page\">\n      <IssuesPageHeader\n        openIssuesCount={openIssuesCount}\n        org={org}\n        repo={repo}\n      />\n      {renderedList}\n      <IssuePagination\n        currentPage={currentPage}\n        pageCount={pageCount}\n        onPageChange={onPageChanged}\n      />\n    </div>\n  );\n};\n","import React from 'react'\nimport classnames from 'classnames'\n\nimport { Issue } from 'api/githubAPI'\nimport { UserWithAvatar } from 'components/UserWithAvatar'\n\nimport styles from './IssueMeta.module.css'\n\ninterface IssueProps {\n  issue: Issue\n}\n\nconst IssueState = ({ issue: { state } }: IssueProps) => (\n  <span\n    className={classnames('issue-detail__state', styles.issueState, {\n      [styles.open]: state === 'open'\n    })}\n  >\n    {state}\n  </span>\n)\n\nconst IssueNumber = ({ issue }: IssueProps) => (\n  <span className={classnames('issue-detail__number', styles.number)}>\n    #{issue.number}\n  </span>\n)\n\nexport const IssueMeta = ({ issue }: IssueProps) => {\n  return (\n    <div className={classnames('issue-detail__meta', styles.meta)}>\n      <IssueNumber issue={issue} />\n      <IssueState issue={issue} />\n      <UserWithAvatar user={issue.user} orientation=\"horizontal\" />\n    </div>\n  )\n}\n","import React from 'react'\nimport ReactMarkdown from 'react-markdown'\n\nimport { insertMentionLinks } from 'utils/stringUtils'\nimport { Issue, Comment } from 'api/githubAPI'\nimport { UserWithAvatar } from 'components/UserWithAvatar'\n\nimport styles from './IssueComments.module.css'\n\ninterface ICLProps {\n  issue: Issue\n  comments: Comment[]\n}\n\ninterface ICProps {\n  comment: Comment\n}\n\nfunction IssueComment({ comment }: ICProps) {\n  return (\n    <div className={styles.comment}>\n      <UserWithAvatar\n        user={comment.user}\n        classes={{ avatar: styles.avatar, username: styles.username }}\n        orientation=\"horizontal\"\n      />\n\n      <div className={styles.body}>\n        <ReactMarkdown\n          className=\"markdown\"\n          source={insertMentionLinks(comment.body)}\n        />\n      </div>\n    </div>\n  )\n}\n\nexport function IssueComments({ comments = [], issue }: ICLProps) {\n  // The issue has no comments\n  if (issue.comments === 0) {\n    return <div className=\"issue-detail--no-comments\">No comments</div>\n  }\n\n  // The issue has comments, but they're not loaded yet\n  if (!comments || comments.length === 0) {\n    return (\n      <div className=\"issue-detail--comments-loading\">Comments loading...</div>\n    )\n  }\n\n  // Comments are loaded\n  return (\n    <ul className={styles.commentsList}>\n      {comments.map(comment => (\n        <li key={comment.id}>\n          <IssueComment comment={comment} />\n        </li>\n      ))}\n    </ul>\n  )\n}\n","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch, shallowEqual } from 'react-redux';\nimport ReactMarkdown from 'react-markdown';\nimport classnames from 'classnames';\n\nimport { insertMentionLinks } from 'utils/stringUtils';\nimport { IssueLabels } from 'components/IssueLabels';\nimport { fetchIssue } from 'features/issuesList/issuesSlice';\nimport { fetchComments } from 'features/issueDetails/commentsSlice';\n\nimport { IssueMeta } from './IssueMeta';\nimport { IssueComments } from './IssueComments';\n\nimport styles from './IssueDetailsPage.module.css';\nimport './IssueDetailsPage.css';\nimport { RootState } from 'app/rootReducer';\n\ninterface IDProps {\n  org: string;\n  repo: string;\n  issueId: number;\n  showIssuesList: () => void;\n}\n\nexport const IssueDetailsPage = ({\n  org,\n  repo,\n  issueId,\n  showIssuesList,\n}: IDProps) => {\n  const dispatch = useDispatch();\n  const issue = useSelector(\n    (state: RootState) => state.issues.issuesByNumber[issueId]\n  );\n  const { commentsLoading, commentsError, comments } = useSelector(\n    (state: RootState) => {\n      return {\n        commentsLoading: state.comments.loading,\n        commentsError: state.comments.error,\n        comments: state.comments.commentsByIssue[issueId],\n      };\n    },\n    shallowEqual\n  );\n\n  useEffect(() => {\n    if (!issue) {\n      dispatch(fetchIssue(org, repo, issueId));\n    }\n    // Since we may have the issue already, make sure we scroll to the top\n    window.scrollTo({ top: 0 });\n  }, [org, repo, issueId, dispatch, issue]);\n\n  useEffect(() => {\n    if (issue) {\n      dispatch(fetchComments(issue));\n    }\n  }, [dispatch, issue]);\n\n  let content;\n\n  const backToIssueListButton = (\n    <button className=\"pure-button\" onClick={showIssuesList}>\n      Back to Issues List\n    </button>\n  );\n\n  if (issue === null) {\n    content = (\n      <div className=\"issue-detail--loading\">\n        {backToIssueListButton}\n        <p>Loading issue #{issueId}...</p>\n      </div>\n    );\n  } else {\n    let renderedComments;\n    if (comments) {\n      renderedComments = <IssueComments issue={issue} comments={comments} />;\n    } else if (commentsLoading) {\n      renderedComments = (\n        <div className=\"issue-detail--loading\">\n          <p>Loading comments...</p>\n        </div>\n      );\n    } else if (commentsError) {\n      renderedComments = (\n        <div className=\"issue-detail--error\">\n          <h1>Could not load comments for issue #{issueId}</h1>\n          <p>{commentsError.toString()}</p>\n        </div>\n      );\n    }\n\n    content = (\n      <div className={classnames('issueDetailsPage', styles.issueDetailsPage)}>\n        <h1 className=\"issue-detail__title\">{issue.title}</h1>\n        {backToIssueListButton}\n        <IssueMeta issue={issue} />\n        <IssueLabels labels={issue.labels} className={styles.issueLabels} />\n        <hr className={styles.divider} />\n        <div className={styles.summary}>\n          <ReactMarkdown\n            className={'testing'}\n            source={insertMentionLinks(issue.body)}\n          />\n        </div>\n        <hr className={styles.divider} />\n        <ul>{renderedComments}</ul>\n      </div>\n    );\n  }\n\n  return <div>{content}</div>;\n};\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { RootState } from './rootReducer';\nimport './App.css';\n\nimport { RepoSearchForm } from 'features/repoSearch/RepoSearchForm';\nimport { IssuesListPage } from 'features/issuesList/IssuesListPage';\nimport { IssueDetailsPage } from 'features/issueDetails/IssueDetailsPage';\n\nimport {\n  displayRepo,\n  setCurrentDisplayType,\n  setCurrentPage,\n} from 'features/issuesDisplay/issuesDisplaySlice';\n\ntype CurrentDisplay =\n  | {\n      type: 'issues';\n    }\n  | {\n      type: 'comments';\n      issueId: number;\n    };\n\nconst App: React.FC = () => {\n  const dispatch = useDispatch();\n  const { org, repo, displayType, page, issueId } = useSelector(\n    (state: RootState) => state.issuesDisplay\n  );\n  const setOrgAndRepo = (org: string, repo: string) => {\n    dispatch(displayRepo({ org, repo }));\n  };\n\n  const setJumpToPage = (page: number) => {\n    dispatch(setCurrentPage(page));\n  };\n\n  const showIssuesList = () => {\n    dispatch(setCurrentDisplayType({ displayType: 'issues' }));\n  };\n\n  const showIssueComments = (issueId: number) => {\n    dispatch(setCurrentDisplayType({ displayType: 'comments', issueId }));\n  };\n\n  let content;\n\n  if (displayType === 'issues') {\n    content = (\n      <>\n        <RepoSearchForm\n          org={org}\n          repo={repo}\n          setOrgAndRepo={setOrgAndRepo}\n          setJumpToPage={setJumpToPage}\n        />\n        <IssuesListPage\n          org={org}\n          repo={repo}\n          page={page}\n          setJumpToPage={setJumpToPage}\n          showIssueComments={showIssueComments}\n        />\n      </>\n    );\n  } else if (issueId !== null) {\n    const key = `${org}/${repo}/${issueId}`;\n    content = (\n      <IssueDetailsPage\n        key={key}\n        org={org}\n        repo={repo}\n        issueId={issueId}\n        showIssuesList={showIssuesList}\n      />\n    );\n  }\n\n  return <div className=\"App\">{content}</div>;\n};\n\nexport default App;\n","import { combineReducers } from '@reduxjs/toolkit';\nimport issuesDisplayReducer from 'features/issuesDisplay/issuesDisplaySlice';\nimport issuesReducer from 'features/issuesList/issuesSlice';\nimport repoDetailsReducer from 'features/repoSearch/repoDetailsSlice';\nimport commentsReducer from 'features/issueDetails/commentsSlice';\n\nconst rootReducer = combineReducers({\n  issuesDisplay: issuesDisplayReducer,\n  issues: issuesReducer,\n  comments: commentsReducer,\n  repoDetails: repoDetailsReducer,\n});\n\nexport type RootState = ReturnType<typeof rootReducer>;\n\nexport default rootReducer;\n","import { configureStore, Action } from '@reduxjs/toolkit';\nimport { ThunkAction } from 'redux-thunk';\n\nimport rootReducer, { RootState } from './rootReducer';\n\nconst store = configureStore({\n  reducer: rootReducer,\n});\n\nif (process.env.NODE_ENV === 'development' && module.hot) {\n  module.hot.accept('./rootReducer', () => {\n    const newRootReducer = require('./rootReducer').default;\n    store.replaceReducer(newRootReducer);\n  });\n}\n\nexport type AppDispatch = typeof store.dispatch;\n\nexport type AppThunk = ThunkAction<void, RootState, unknown, Action<string>>\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport store from './app/store';\n\nimport './index.css';\n\nconst render = () => {\n  const App = require('./app/App').default;\n\n  ReactDOM.render(\n    <Provider store={store}>\n      <App />\n    </Provider>,\n    document.getElementById('root')\n  )\n}\n\nrender();\n\nif (process.env.NODE_ENV === 'development' && module.hot) {\n  module.hot.accept('./app/App', render)\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"issue\":\"IssueListItem_issue__2Yp8T\",\"number\":\"IssueListItem_number___KKiF\",\"title\":\"IssueListItem_title__1l-Lb\",\"label\":\"IssueListItem_label__319aw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"issueState\":\"IssueMeta_issueState__39S-8\",\"open\":\"IssueMeta_open__1dZwy\",\"number\":\"IssueMeta_number__1Exec\",\"meta\":\"IssueMeta_meta__V0kVE\"};","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\nimport { AppThunk } from 'app/store';\n\nimport { RepoDetails, getRepoDetails } from 'api/githubAPI';\n\ninterface RepoDetailsState {\n  openIssuesCount: number;\n  error: string | null;\n}\n\nconst initialState: RepoDetailsState = {\n  openIssuesCount: -1,\n  error: null,\n};\n\nconst repoDetails = createSlice({\n  name: 'repoDetails',\n  initialState,\n  reducers: {\n    getRepoDetailsSuccess(state, action: PayloadAction<RepoDetails>) {\n      state.openIssuesCount = action.payload.open_issues_count;\n      state.error = null;\n    },\n    getRepoDetailsFailed(state, action: PayloadAction<string>) {\n      state.openIssuesCount = -1;\n      state.error = action.payload;\n    },\n  },\n});\n\nexport const {\n  getRepoDetailsSuccess,\n  getRepoDetailsFailed,\n} = repoDetails.actions;\n\nexport default repoDetails.reducer;\n\nexport const fetchIssuesCount = (\n  org: string,\n  repo: string,\n): AppThunk => async dispatch => {\n  try {\n    const repoDetails = await getRepoDetails(org, repo);\n    dispatch(getRepoDetailsSuccess(repoDetails))\n  } catch (err) {\n    dispatch(getRepoDetailsFailed(err.toString()))\n  }\n}\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\nimport { Comment, getComments, Issue } from 'api/githubAPI';\n\nimport { AppThunk } from 'app/store';\n\ninterface CommentsState {\n  commentsByIssue: Record<number, Comment[] | undefined>;\n  loading: boolean;\n  error: string | null;\n}\n\ninterface CommentLoaded {\n  issueId: number;\n  comments: Comment[];\n}\n\nconst initialState: CommentsState = {\n  commentsByIssue: {},\n  loading: false,\n  error: null,\n};\n\nconst comments = createSlice({\n  name: 'comments',\n  initialState,\n  reducers: {\n    getCommentsStart(state) {\n      state.loading = true;\n    },\n    getCommentsSuccess(state, { payload }: PayloadAction<CommentLoaded>) {\n      state.loading = false;\n      state.error = null;\n      state.commentsByIssue[payload.issueId] = payload.comments;\n    },\n    getCommentsFailure(state, { payload }: PayloadAction<string>) {\n      state.loading = false;\n      state.error = payload;\n    },\n  },\n});\n\nexport const {\n  getCommentsStart,\n  getCommentsSuccess,\n  getCommentsFailure,\n} = comments.actions;\n\nexport default comments.reducer;\n\nexport const fetchComments = (issue: Issue): AppThunk => async (dispatch) => {\n  try {\n    dispatch(getCommentsStart());\n    const comments = await getComments(issue.comments_url);\n    dispatch(getCommentsSuccess({ issueId: issue.number, comments }));\n  } catch (err) {\n    dispatch(getCommentsFailure(err.toString()));\n  }\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"issuesList\":\"IssuesList_issuesList__3YTSL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pagination\":\"IssuePagination_pagination__1fZ4j\"};"],"sourceRoot":""}