{"version":3,"sources":["features/issueDetails/IssueComments.module.css","features/issueDetails/IssueDetailsPage.module.css","features/issuesList/IssueListItem.module.css","features/issueDetails/IssueMeta.module.css","features/repoSearch/RepoSearchForm.tsx","api/githubAPI.tsx","features/issuesList/IssuesPageHeader.tsx","utils/stringUtils.ts","components/IssueLabels.tsx","components/UserWithAvatar.tsx","features/issuesList/IssueListItem.tsx","features/issuesList/IssuesList.tsx","features/issuesList/IssuePagination.tsx","features/issuesList/IssuesListPage.tsx","features/issueDetails/IssueMeta.tsx","features/issueDetails/IssueComments.tsx","features/issueDetails/IssueDetailsPage.tsx","app/App.tsx","index.tsx","features/issuesList/IssuesList.module.css","features/issuesList/IssuePagination.module.css","components/UserWithAvatar.module.css"],"names":["module","exports","RepoSearchForm","org","repo","setOrgAndRepo","setJumpToPage","useState","currentOrg","setCurrentOrg","currentRepo","setCurrentRepo","currentPageText","setCurrentPageText","className","htmlFor","style","marginRight","name","value","onChange","e","target","marginLeft","type","onClick","marginTop","newPage","parseInt","getConfig","headers","process","getPageCount","pageLinks","Object","keys","length","first","prev","isLastPage","page","last","getIssues","a","url","axios","get","issuesResponse","pageCount","parseLink","link","issues","data","getRepoDetails","getIssue","number","getComments","OrgRepo","href","IssuesPageHeader","openIssuesCount","pluralizedIssue","insertMentionLinks","markdown","replace","IssueLabels","labels","classnames","map","label","key","id","boxShadow","color","borderColor","UserWithAvatar","user","orientation","classes","linkClassnames","styles","issueUser","vertical","horizontal","avatarClassnames","avatar","usernameClassnames","username","contents","Fragment","src","avatar_url","alt","login","IssueListItem","title","comments","body","showIssueComments","pluralizedComments","issue","preventDefault","stopPropagation","text","maxLength","cleanText","ellip","oneTooLarge","substr","test","i","shorten","IssuesList","renderedIssues","issuesList","IssuePagination","currentPage","onPageChange","pagination","forcePage","marginPagesDisplayed","pageRangeDisplayed","nextLabel","previousLabel","IssuesListPage","issuesResult","setIssues","numIssues","setNumIssues","isLoading","setIsLoading","issuesError","setIssuesError","useEffect","fetchIssues","fetchIssueCount","repoDetails","open_issues_count","Promise","all","console","error","fetchEverything","toString","Math","min","max","renderedList","selectedItem","selected","IssueState","state","issueState","open","IssueNumber","IssueMeta","meta","IssueComment","comment","source","IssueComments","commentsList","IssueDetailsPage","content","issueId","showIssuesList","setIssue","setComments","commentsError","setCommentsError","fetchIssue","comments_url","fetchComments","backToIssueListButton","renderedComments","issueDetailsPage","issueLabels","divider","summary","App","setOrg","setRepo","setPage","currentDisplay","setCurrentDisplay","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3e9911d3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"comment\":\"IssueComments_comment__2K-P3\",\"body\":\"IssueComments_body__26Hu9\",\"avatar\":\"IssueComments_avatar__1IClw\",\"username\":\"IssueComments_username__3CX3Q\",\"commentsList\":\"IssueComments_commentsList__1rPMM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"issueDetailsPage\":\"IssueDetailsPage_issueDetailsPage__2L9pw\",\"issueLabels\":\"IssueDetailsPage_issueLabels__2xoOq\",\"summary\":\"IssueDetailsPage_summary__3WqKZ\",\"divider\":\"IssueDetailsPage_divider__2tP7Z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"issue\":\"IssueListItem_issue__2Yp8T\",\"number\":\"IssueListItem_number___KKiF\",\"title\":\"IssueListItem_title__1l-Lb\",\"label\":\"IssueListItem_label__319aw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"issueState\":\"IssueMeta_issueState__39S-8\",\"open\":\"IssueMeta_open__1dZwy\",\"number\":\"IssueMeta_number__1Exec\",\"meta\":\"IssueMeta_meta__V0kVE\"};","import React, { useState, ChangeEvent } from 'react'\n\nimport './pure-forms.css'\nimport './pure-buttons.css'\n\ninterface Props {\n  org: string\n  repo: string\n  setOrgAndRepo: (org: string, repo: string) => void\n  setJumpToPage: (page: number) => void\n}\n\ntype InputEvent = ChangeEvent<HTMLInputElement>\ntype ChangeHandler = (e: InputEvent) => void\n\nexport const RepoSearchForm = ({\n  org,\n  repo,\n  setOrgAndRepo,\n  setJumpToPage\n}: Props) => {\n  const [currentOrg, setCurrentOrg] = useState(org)\n  const [currentRepo, setCurrentRepo] = useState(repo)\n  const [currentPageText, setCurrentPageText] = useState('1')\n\n  const onOrgChanged: ChangeHandler = e => {\n    setCurrentOrg(e.target.value)\n  }\n\n  const onRepoChanged: ChangeHandler = e => {\n    setCurrentRepo(e.target.value)\n  }\n\n  const onCurrentPageChanged: ChangeHandler = e => {\n    setCurrentPageText(e.target.value)\n  }\n\n  const onLoadRepoClicked = () => {\n    setOrgAndRepo(currentOrg, currentRepo)\n  }\n\n  const onJumpToPageClicked = () => {\n    const newPage = parseInt(currentPageText)\n\n    if (newPage >= 1) {\n      setJumpToPage(newPage)\n    }\n  }\n\n  return (\n    <form className=\"pure-form\">\n      <div>\n        <label htmlFor=\"org\" style={{ marginRight: 5 }}>\n          Org:\n        </label>\n        <input name=\"org\" value={currentOrg} onChange={onOrgChanged} />\n        <label htmlFor=\"repo\" style={{ marginRight: 5, marginLeft: 10 }}>\n          Repo:\n        </label>\n        <input name=\"repo\" value={currentRepo} onChange={onRepoChanged} />\n        <button\n          type=\"button\"\n          className=\"pure-button pure-button-primary\"\n          style={{ marginLeft: 5 }}\n          onClick={onLoadRepoClicked}\n        >\n          Load Repo\n        </button>\n      </div>\n      <div style={{ marginTop: 5 }}>\n        <label htmlFor=\"jumpToPage\" style={{ marginRight: 5 }}>\n          Issues Page:\n        </label>\n        <input\n          name=\"jumpToPage\"\n          value={currentPageText}\n          onChange={onCurrentPageChanged}\n        />\n        <button\n          type=\"button\"\n          className=\"pure-button pure-button-primary\"\n          style={{ marginLeft: 5 }}\n          onClick={onJumpToPageClicked}\n        >\n          Jump to Page\n        </button>\n      </div>\n    </form>\n  )\n}\n","import axios from 'axios';\nimport parseLink, { Links } from 'parse-link-header';\n\nexport interface Label {\n  id: number;\n  name: string;\n  color: string;\n}\n\nexport interface User {\n  login: string;\n  avatar_url: string;\n}\n\nexport interface Issue {\n  id: number;\n  title: string;\n  number: number;\n  user: User;\n  body: string;\n  labels: Label[];\n  comments_url: string;\n  state: 'open' | 'closed';\n  comments: number;\n}\n\nexport interface RepoDetails {\n  id: number;\n  name: string;\n  full_name: string;\n  open_issues_count: number;\n}\n\nexport interface Comment {\n  id: number;\n  body: string;\n  user: User;\n  created_at: string;\n  updated_at: string;\n}\n\nexport interface IssuesResult {\n  pageLinks: Links | null;\n  pageCount: number;\n  issues: Issue[];\n}\n\nconst getConfig = () => {\n  return {\n    headers: {\n      'Authorization': `token ${process.env.REACT_APP_GH_API_TOKEN}`,\n    },\n  };\n};\n\nconst isLastPage = (pageLinks: Links) => {\n  return (\n    Object.keys(pageLinks).length === 2 && pageLinks.first && pageLinks.prev\n  );\n};\n\nconst getPageCount = (pageLinks: Links) => {\n  if (!pageLinks) {\n    return 0;\n  }\n  if (isLastPage(pageLinks)) {\n    return parseInt(pageLinks.prev.page, 10) + 1;\n  } else if (pageLinks.last) {\n    return parseInt(pageLinks.last.page, 10);\n  } else {\n    return 0;\n  }\n};\n\nexport async function getIssues(\n  org: string,\n  repo: string,\n  page = 1\n): Promise<IssuesResult> {\n  const url = `https://api.github.com/repos/${org}/${repo}/issues?per_page=25&page=${page}`;\n\n  try {\n    const issuesResponse = await axios.get<Issue[]>(url);\n    let pageCount = 0;\n    const pageLinks = parseLink(issuesResponse.headers.link);\n\n    if (pageLinks !== null) {\n      pageCount = getPageCount(pageLinks);\n    }\n\n    return {\n      pageLinks,\n      pageCount,\n      issues: issuesResponse.data,\n    };\n  } catch (err) {\n    throw err;\n  }\n}\n\nexport async function getRepoDetails(org: string, repo: string) {\n  const url = `https://api.github.com/repos/${org}/${repo}`;\n\n  const { data } = await axios.get<RepoDetails>(url, getConfig());\n  return data;\n}\n\nexport async function getIssue(org: string, repo: string, number: number) {\n  const url = `https://api.github.com/repos/${org}/${repo}/issues/${number}`;\n\n  const { data } = await axios.get<Issue>(url, getConfig());\n  return data;\n}\n\nexport async function getComments(url: string) {\n  const { data } = await axios.get<Comment[]>(url, getConfig());\n  return data;\n}\n","import React from 'react'\n\ninterface OrgProps {\n  org: string\n  repo: string\n}\n\ntype HeaderProps = {\n  openIssuesCount: number\n} & OrgProps\n\nfunction OrgRepo({ org, repo }: OrgProps) {\n  return (\n    <span>\n      <a href={`https://github.com/${org}`} className=\"header__org\">\n        {org}\n      </a>\n      {' / '}\n      <a href={`https://github.com/${org}/${repo}`} className=\"header__repo\">\n        {repo}\n      </a>\n    </span>\n  )\n}\n\nexport function IssuesPageHeader({\n  openIssuesCount = -1,\n  org,\n  repo\n}: HeaderProps) {\n  if (openIssuesCount === -1) {\n    return (\n      <h1>\n        Open issues for <OrgRepo org={org} repo={repo} />\n      </h1>\n    )\n  } else {\n    const pluralizedIssue = openIssuesCount === 1 ? 'issue' : 'issues'\n    return (\n      <h1>\n        <span className=\"header__openIssues\">{openIssuesCount}</span> open{' '}\n        {pluralizedIssue} for <OrgRepo org={org} repo={repo} />\n      </h1>\n    )\n  }\n}\n","export function insertMentionLinks(markdown: string) {\n  return markdown.replace(\n    /\\B(@([a-zA-Z0-9](-?[a-zA-Z0-9_])+))/g,\n    `**[$1](https://github.com/$2)**`\n  )\n}\n\nexport function shorten(text = '', maxLength = 140) {\n  // Normalize newlines\n  let cleanText = text.replace(/\\\\r\\\\n/g, '\\n')\n\n  // Return if short enough already\n  if (cleanText.length <= maxLength) {\n    return cleanText\n  }\n\n  const ellip = ' ...'\n\n  // Return the 140 chars as-is if they end in a non-word char\n  const oneTooLarge = cleanText.substr(0, 141)\n  if (/\\W$/.test(oneTooLarge)) {\n    return oneTooLarge.substr(0, 140) + ellip\n  }\n\n  // Walk backwards to the nearest non-word character\n  let i = oneTooLarge.length\n  while (--i) {\n    if (/\\W/.test(oneTooLarge[i])) {\n      return oneTooLarge.substr(0, i) + ellip\n    }\n  }\n\n  return oneTooLarge.substr(0, 140) + ellip\n}\n","import React from 'react'\nimport classnames from 'classnames'\n\nimport { Label } from 'api/githubAPI'\n\ninterface IssueLabelsProps {\n  labels: Label[]\n  className?: string\n}\n\nexport const IssueLabels = ({ labels, className }: IssueLabelsProps) => (\n  <div className={classnames('issue__labels', className)}>\n    {labels.map(label => (\n      <span\n        key={label.id}\n        className=\"issue__label\"\n        style={{\n          boxShadow: `0 0 2px #${label.color}`,\n          borderColor: `#${label.color}`\n        }}\n      >\n        {label.name}\n      </span>\n    ))}\n  </div>\n)\n","import React from 'react'\nimport classnames from 'classnames'\n\nimport { User } from 'api/githubAPI'\nimport styles from './UserWithAvatar.module.css'\n\ninterface UserAvatarProps {\n  user: User\n  orientation?: 'vertical' | 'horizontal'\n  link?: boolean\n  classes?: { [key: string]: string }\n}\n\nexport const UserWithAvatar = ({\n  user,\n  orientation = 'vertical',\n  link = true,\n  classes = {}\n}: UserAvatarProps) => {\n  const linkClassnames = classnames(styles.issueUser, {\n    [styles.vertical]: orientation === 'vertical',\n    [styles.horizontal]: orientation === 'horizontal'\n  })\n\n  const avatarClassnames = classnames(styles.avatar, classes.avatar)\n  const usernameClassnames = classnames(styles.username, classes.username)\n\n  const contents = (\n    <React.Fragment>\n      <img className={avatarClassnames} src={user.avatar_url} alt=\"\" />\n      <div className={usernameClassnames}>{user.login}</div>\n    </React.Fragment>\n  )\n\n  if (link) {\n    return (\n      <a href={`https://github.com/${user.login}`} className={linkClassnames}>\n        {contents}\n      </a>\n    )\n  } else {\n    return <span className={linkClassnames}>{contents}</span>\n  }\n}\n","import React, { MouseEvent } from 'react'\n\nimport { Issue } from 'api/githubAPI'\nimport { shorten } from 'utils/stringUtils'\n\nimport { IssueLabels } from 'components/IssueLabels'\nimport { UserWithAvatar } from 'components/UserWithAvatar'\n\nimport styles from './IssueListItem.module.css'\n\ntype Props = Issue & {\n  showIssueComments: (issueId: number) => void\n}\n\nexport const IssueListItem = ({\n  number,\n  title,\n  labels,\n  user,\n  comments,\n  body = '',\n  showIssueComments\n}: Props) => {\n  const onIssueClicked = (e: MouseEvent) => {\n    e.preventDefault()\n    e.stopPropagation()\n    showIssueComments(number)\n  }\n\n  const pluralizedComments = comments === 1 ? 'comment' : 'comments'\n\n  return (\n    <div className={styles.issue}>\n      <UserWithAvatar user={user} />\n      <div className=\"issue__body\">\n        <a href=\"#comments\" onClick={onIssueClicked}>\n          <span className={styles.number}>#{number}</span>\n          <span className={styles.title}>{title}</span>\n        </a>\n        <br /> ({comments} {pluralizedComments})\n        <p className=\"issue__summary\">{shorten(body)}</p>\n        <IssueLabels labels={labels} className={styles.label} />\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\n\nimport { Issue } from 'api/githubAPI'\nimport { IssueListItem } from './IssueListItem'\n\nimport styles from './IssuesList.module.css'\n\ninterface Props {\n  issues: Issue[]\n  showIssueComments: (issueId: number) => void\n}\n\nexport const IssuesList = ({ issues, showIssueComments }: Props) => {\n  const renderedIssues = issues.map(issue => (\n    <li key={issue.id}>\n      <IssueListItem {...issue} showIssueComments={showIssueComments} />\n    </li>\n  ))\n\n  return <ul className={styles.issuesList}>{renderedIssues}</ul>\n}\n","import React from 'react'\nimport classnames from 'classnames'\nimport Paginate, { ReactPaginateProps } from 'react-paginate'\n\nimport styles from './IssuePagination.module.css'\nimport './IssuePagination.css'\n\nexport type OnPageChangeCallback = ReactPaginateProps['onPageChange']\n\ninterface Props {\n  currentPage: number\n  pageCount: number\n  onPageChange?: OnPageChangeCallback\n}\n\nexport const IssuePagination = ({\n  currentPage,\n  pageCount,\n  onPageChange\n}: Props) => {\n  return (\n    <div className={classnames('issuesPagination', styles.pagination)}>\n      <Paginate\n        forcePage={currentPage}\n        pageCount={pageCount}\n        marginPagesDisplayed={2}\n        pageRangeDisplayed={5}\n        onPageChange={onPageChange}\n        nextLabel=\"&rarr;\"\n        previousLabel=\"&larr;\"\n      />\n    </div>\n  )\n}\n","import React, { useState, useEffect } from 'react'\n\nimport { getIssues, getRepoDetails, IssuesResult } from 'api/githubAPI'\n\nimport { IssuesPageHeader } from './IssuesPageHeader'\nimport { IssuesList } from './IssuesList'\nimport { IssuePagination, OnPageChangeCallback } from './IssuePagination'\n\ninterface ILProps {\n  org: string\n  repo: string\n  page: number\n  setJumpToPage: (page: number) => void\n  showIssueComments: (issueId: number) => void\n}\n\nexport const IssuesListPage = ({\n  org,\n  repo,\n  page = 1,\n  setJumpToPage,\n  showIssueComments\n}: ILProps) => {\n  const [issuesResult, setIssues] = useState<IssuesResult>({\n    pageLinks: null,\n    pageCount: 1,\n    issues: []\n  })\n  const [numIssues, setNumIssues] = useState<number>(-1)\n  const [isLoading, setIsLoading] = useState<boolean>(false)\n  const [issuesError, setIssuesError] = useState<Error | null>(null)\n\n  const { issues, pageCount } = issuesResult\n\n  useEffect(() => {\n    async function fetchEverything() {\n      async function fetchIssues() {\n        const issuesResult = await getIssues(org, repo, page)\n        setIssues(issuesResult)\n      }\n\n      async function fetchIssueCount() {\n        const repoDetails = await getRepoDetails(org, repo)\n        setNumIssues(repoDetails.open_issues_count)\n      }\n\n      try {\n        await Promise.all([fetchIssues(), fetchIssueCount()])\n        setIssuesError(null)\n      } catch (err) {\n        console.error(err)\n        setIssuesError(err)\n      } finally {\n        setIsLoading(false)\n      }\n    }\n\n    setIsLoading(true)\n\n    fetchEverything()\n  }, [org, repo, page])\n\n  if (issuesError) {\n    return (\n      <div>\n        <h1>Something went wrong...</h1>\n        <div>{issuesError.toString()}</div>\n      </div>\n    )\n  }\n\n  const currentPage = Math.min(pageCount, Math.max(page, 1)) - 1\n\n  let renderedList = isLoading ? (\n    <h3>Loading...</h3>\n  ) : (\n    <IssuesList issues={issues} showIssueComments={showIssueComments} />\n  )\n\n  const onPageChanged: OnPageChangeCallback = selectedItem => {\n    const newPage = selectedItem.selected + 1\n    setJumpToPage(newPage)\n  }\n\n  return (\n    <div id=\"issue-list-page\">\n      <IssuesPageHeader openIssuesCount={numIssues} org={org} repo={repo} />\n      {renderedList}\n      <IssuePagination\n        currentPage={currentPage}\n        pageCount={pageCount}\n        onPageChange={onPageChanged}\n      />\n    </div>\n  )\n}\n","import React from 'react'\nimport classnames from 'classnames'\n\nimport { Issue } from 'api/githubAPI'\nimport { UserWithAvatar } from 'components/UserWithAvatar'\n\nimport styles from './IssueMeta.module.css'\n\ninterface IssueProps {\n  issue: Issue\n}\n\nconst IssueState = ({ issue: { state } }: IssueProps) => (\n  <span\n    className={classnames('issue-detail__state', styles.issueState, {\n      [styles.open]: state === 'open'\n    })}\n  >\n    {state}\n  </span>\n)\n\nconst IssueNumber = ({ issue }: IssueProps) => (\n  <span className={classnames('issue-detail__number', styles.number)}>\n    #{issue.number}\n  </span>\n)\n\nexport const IssueMeta = ({ issue }: IssueProps) => {\n  return (\n    <div className={classnames('issue-detail__meta', styles.meta)}>\n      <IssueNumber issue={issue} />\n      <IssueState issue={issue} />\n      <UserWithAvatar user={issue.user} orientation=\"horizontal\" />\n    </div>\n  )\n}\n","import React from 'react'\nimport ReactMarkdown from 'react-markdown'\n\nimport { insertMentionLinks } from 'utils/stringUtils'\nimport { Issue, Comment } from 'api/githubAPI'\nimport { UserWithAvatar } from 'components/UserWithAvatar'\n\nimport styles from './IssueComments.module.css'\n\ninterface ICLProps {\n  issue: Issue\n  comments: Comment[]\n}\n\ninterface ICProps {\n  comment: Comment\n}\n\nfunction IssueComment({ comment }: ICProps) {\n  return (\n    <div className={styles.comment}>\n      <UserWithAvatar\n        user={comment.user}\n        classes={{ avatar: styles.avatar, username: styles.username }}\n        orientation=\"horizontal\"\n      />\n\n      <div className={styles.body}>\n        <ReactMarkdown\n          className=\"markdown\"\n          source={insertMentionLinks(comment.body)}\n        />\n      </div>\n    </div>\n  )\n}\n\nexport function IssueComments({ comments = [], issue }: ICLProps) {\n  // The issue has no comments\n  if (issue.comments === 0) {\n    return <div className=\"issue-detail--no-comments\">No comments</div>\n  }\n\n  // The issue has comments, but they're not loaded yet\n  if (!comments || comments.length === 0) {\n    return (\n      <div className=\"issue-detail--comments-loading\">Comments loading...</div>\n    )\n  }\n\n  // Comments are loaded\n  return (\n    <ul className={styles.commentsList}>\n      {comments.map(comment => (\n        <li key={comment.id}>\n          <IssueComment comment={comment} />\n        </li>\n      ))}\n    </ul>\n  )\n}\n","import React, { useState, useEffect } from 'react'\nimport ReactMarkdown from 'react-markdown'\nimport classnames from 'classnames'\n\nimport { insertMentionLinks } from 'utils/stringUtils'\nimport { getIssue, getComments, Issue, Comment } from 'api/githubAPI'\nimport { IssueLabels } from 'components/IssueLabels'\n\nimport { IssueMeta } from './IssueMeta'\nimport { IssueComments } from './IssueComments'\n\nimport styles from './IssueDetailsPage.module.css'\nimport './IssueDetailsPage.css'\n\ninterface IDProps {\n  org: string\n  repo: string\n  issueId: number\n  showIssuesList: () => void\n}\n\nexport const IssueDetailsPage = ({\n  org,\n  repo,\n  issueId,\n  showIssuesList\n}: IDProps) => {\n  const [issue, setIssue] = useState<Issue | null>(null)\n  const [comments, setComments] = useState<Comment[]>([])\n  const [commentsError, setCommentsError] = useState<Error | null>(null)\n\n  useEffect(() => {\n    async function fetchIssue() {\n      try {\n        setCommentsError(null)\n        const issue = await getIssue(org, repo, issueId)\n        setIssue(issue)\n      } catch (err) {\n        setCommentsError(err)\n      }\n    }\n\n    fetchIssue()\n  }, [org, repo, issueId])\n\n  useEffect(() => {\n    async function fetchComments() {\n      if (issue !== null) {\n        const comments = await getComments(issue.comments_url)\n        setComments(comments)\n      }\n    }\n\n    fetchComments()\n  }, [issue])\n\n  let content\n\n  const backToIssueListButton = (\n    <button className=\"pure-button\" onClick={showIssuesList}>\n      Back to Issues List\n    </button>\n  )\n\n  if (commentsError) {\n    return (\n      <div className=\"issue-detail--error\">\n        {backToIssueListButton}\n        <h1>There was a problem loading issue #{issueId}</h1>\n        <p>{commentsError.toString()}</p>\n      </div>\n    )\n  }\n\n  if (issue === null) {\n    content = (\n      <div className=\"issue-detail--loading\">\n        {backToIssueListButton}\n        <p>Loading issue #{issueId}...</p>\n      </div>\n    )\n  } else {\n    let renderedComments = <IssueComments issue={issue} comments={comments} />\n\n    content = (\n      <div className={classnames('issueDetailsPage', styles.issueDetailsPage)}>\n        <h1 className=\"issue-detail__title\">{issue.title}</h1>\n        {backToIssueListButton}\n        <IssueMeta issue={issue} />\n        <IssueLabels labels={issue.labels} className={styles.issueLabels} />\n        <hr className={styles.divider} />\n        <div className={styles.summary}>\n          <ReactMarkdown\n            className={'testing'}\n            source={insertMentionLinks(issue.body)}\n          />\n        </div>\n        <hr className={styles.divider} />\n        <ul>{renderedComments}</ul>\n      </div>\n    )\n  }\n\n  return <div>{content}</div>\n}\n","import React, { useState } from 'react';\nimport './App.css';\n\nimport { RepoSearchForm } from 'features/repoSearch/RepoSearchForm';\nimport { IssuesListPage } from 'features/issuesList/IssuesListPage';\nimport { IssueDetailsPage } from 'features/issueDetails/IssueDetailsPage';\n\nconst ORG = 'pactsafe';\nconst REPO = 'pactsafe-react-sdk';\n\ntype CurrentDisplay =\n  | {\n      type: 'issues';\n    }\n  | {\n      type: 'comments';\n      issueId: number;\n    };\n\nconst App: React.FC = () => {\n  const [org, setOrg] = useState(ORG);\n  const [repo, setRepo] = useState(REPO);\n  const [page, setPage] = useState(1);\n  const [currentDisplay, setCurrentDisplay] = useState<CurrentDisplay>({\n    type: 'issues',\n  });\n\n  const setOrgAndRepo = (org: string, repo: string) => {\n    setOrg(org);\n    setRepo(repo);\n  };\n\n  const setJumpToPage = (page: number) => {\n    setPage(page);\n  };\n\n  const showIssuesList = () => {\n    setCurrentDisplay({ type: 'issues' });\n  };\n\n  const showIssueComments = (issueId: number) => {\n    setCurrentDisplay({ type: 'comments', issueId });\n  };\n\n  let content;\n\n  if (currentDisplay.type === 'issues') {\n    content = (\n      <>\n        <RepoSearchForm\n          org={org}\n          repo={repo}\n          setOrgAndRepo={setOrgAndRepo}\n          setJumpToPage={setJumpToPage}\n        />\n        <IssuesListPage\n          org={org}\n          repo={repo}\n          page={page}\n          setJumpToPage={setJumpToPage}\n          showIssueComments={showIssueComments}\n        />\n      </>\n    );\n  } else {\n    const { issueId } = currentDisplay;\n    const key = `${org}/${repo}/${issueId}`;\n    content = (\n      <IssueDetailsPage\n        key={key}\n        org={org}\n        repo={repo}\n        issueId={issueId}\n        showIssuesList={showIssuesList}\n      />\n    );\n  }\n\n  return <div className=\"App\">{content}</div>;\n};\n\nexport default App;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './app/App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"issuesList\":\"IssuesList_issuesList__3YTSL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pagination\":\"IssuePagination_pagination__1fZ4j\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"issueUser\":\"UserWithAvatar_issueUser__1rZ56\",\"avatar\":\"UserWithAvatar_avatar__2b4Ue\",\"username\":\"UserWithAvatar_username__DZB8Q\",\"vertical\":\"UserWithAvatar_vertical__3VEes\",\"horizontal\":\"UserWithAvatar_horizontal__3DPD3\"};"],"sourceRoot":""}